Export a YOLOv5 PyTorch model to other formats.
TensorFlow exports authored by https://github.com/zldrobit

Format                      | `export.py --include`         | Model
---                         | ---                           | ---
PyTorch                     | -                             | yolov5s.pt
TorchScript                 | `torchscript`                 | yolov5s.torchscript
ONNX                        | `onnx`                        | yolov5s.onnx
OpenVINO                    | `openvino`                    | yolov5s_openvino_model/
TensorRT                    | `engine`                      | yolov5s.engine
CoreML                      | `coreml`                      | yolov5s.mlmodel
TensorFlow SavedModel       | `saved_model`                 | yolov5s_saved_model/
TensorFlow GraphDef         | `pb`                          | yolov5s.pb
TensorFlow Lite             | `tflite`                      | yolov5s.tflite
TensorFlow Edge TPU         | `edgetpu`                     | yolov5s_edgetpu.tflite
TensorFlow.js               | `tfjs`                        | yolov5s_web_model/

Requirements:
    $ pip install -r requirements.txt coremltools onnx onnx-simplifier onnxruntime openvino-dev tensorflow-cpu  # CPU
    $ pip install -r requirements.txt coremltools onnx onnx-simplifier onnxruntime-gpu openvino-dev tensorflow  # GPU

Usage:
    $ python path/to/export.py \
        --weights yolov5s.pt \
        --include torchscript onnx openvino engine coreml tflite ...

Inference:
    $ python path/to/detect.py --weights WEIGHTS
        yolov5s.pt                 # PyTorch
        yolov5s.torchscript        # TorchScript
        yolov5s.onnx               # ONNX Runtime or OpenCV DNN with --dnn
        yolov5s.xml                # OpenVINO
        yolov5s.engine             # TensorRT
        yolov5s.mlmodel            # CoreML (macOS-only)
        yolov5s_saved_model        # TensorFlow SavedModel
        yolov5s.pb                 # TensorFlow GraphDef
        yolov5s.tflite             # TensorFlow Lite
        yolov5s_edgetpu.tflite     # TensorFlow Edge TPU

TensorFlow.js:
    $ cd .. && git clone https://github.com/zldrobit/tfjs-yolov5-example.git && cd tfjs-yolov5-example
    $ npm install
    $ ln -s ../../yolov5/yolov5s_web_model public/yolov5s_web_model
    $ npm start


usage: export.py [-h] [--data DATA] [--weights WEIGHTS [WEIGHTS ...]]
                 [--imgsz IMGSZ [IMGSZ ...]] [--batch-size BATCH_SIZE]
                 [--device DEVICE] [--half] [--inplace] [--train] [--keras]
                 [--optimize] [--int8] [--dynamic] [--simplify]
                 [--opset OPSET] [--verbose] [--workspace WORKSPACE] [--nms]
                 [--agnostic-nms] [--topk-per-class TOPK_PER_CLASS]
                 [--topk-all TOPK_ALL] [--iou-thres IOU_THRES]
                 [--conf-thres CONF_THRES] [--include INCLUDE [INCLUDE ...]]

optional arguments:
  -h, --help            show this help message and exit
  --data DATA           dataset.yaml path
  --weights WEIGHTS [WEIGHTS ...]
                        model.pt path(s)
  --imgsz IMGSZ [IMGSZ ...], --img IMGSZ [IMGSZ ...], --img-size IMGSZ [IMGSZ ...]
                        image (h, w)
  --batch-size BATCH_SIZE
                        batch size
  --device DEVICE       cuda device, i.e. 0 or 0,1,2,3 or cpu
  --half                FP16 half-precision export
  --inplace             set YOLOv5 Detect() inplace=True
  --train               model.train() mode
  --keras               TF: use Keras
  --optimize            TorchScript: optimize for mobile
  --int8                CoreML/TF INT8 quantization
  --dynamic             ONNX/TF: dynamic axes
  --simplify            ONNX: simplify model
  --opset OPSET         ONNX: opset version
  --verbose             TensorRT: verbose log
  --workspace WORKSPACE
                        TensorRT: workspace size (GB)
  --nms                 TF: add NMS to model
  --agnostic-nms        TF: add agnostic NMS to model
  --topk-per-class TOPK_PER_CLASS
                        TF.js NMS: topk per class to keep
  --topk-all TOPK_ALL   TF.js NMS: topk for all classes to keep
  --iou-thres IOU_THRES
                        TF.js NMS: IoU threshold
  --conf-thres CONF_THRES
                        TF.js NMS: confidence threshold
  --include INCLUDE [INCLUDE ...]
                        torchscript, onnx, openvino, engine, coreml,
                        saved_model, pb, tflite, edgetpu, tfjs
